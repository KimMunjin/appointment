spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/appointment?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=zerobase

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

jwt.secret=${MY_JWT_SECRET}

spring.data.redis.mail.host=localhost
spring.data.redis.mail.port=6379

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=reminisce057@gmail.com
spring.mail.password=${MY_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.auth-code-expiration-millis=15*60*1000
## host: Gmail의 SMTP 서버 호스트
## port: SMTP 서버의 포트 번호. Gmail SMTP 서버는 587번 포트를 사용
## username: 이메일을 보내는 용으로 사용되는 계정의 이메일 주소 입력
##password: 앱 비밀번호 입력
##properties: 이메일 구성에 대한 추가 속성
## auth: SMTP 서버에 인증 필요한 경우 true로 지정한다. Gmail SMTP 서버는 인증을 요구하기 때문에 true로 설정
## starttls: SMTP 서버가 TLS를 사용하여 안전한 연결을 요구하는 경우 true로 설정. TLS는 데이터를 암호화하여 안전한 전송을 보장하는 프로토콜
## connectiontimeout: 클라이언트가 SMTP 서버와의 연결을 설정하는 데 대기해야 하는 시간(Millisecond). 연결이 불안정한 경우 대기 시간이 길어질 수 있기 때문에 너무 크게 설정하면 전송 속도가 느려질 수 있음
## timeout: 클라이언트가 SMTP 서버로부터 응답을 대기해야 하는 시간(Millisecond). 서버에서 응답이 오지 않는 경우 대기 시간을 제한하기 위해 사용
## writetimeout: 클라이언트가 작업을 완료하는데 대기해야 하는 시간(Millisecond). 이메일을 SMTP 서버로 전송하는 데 걸리는 시간을 제한하는데 사용
## auth-code-expiration-millis: 이메일 인증 코드의 만료 시간(Millisecond)